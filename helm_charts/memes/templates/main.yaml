# Load the schema.sql file
apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ .Values.memes.prefix }}-database-schema"
data:
  schema.sql: {{ .Files.Get "files/schema.sql" | indent 4 }}

{{- range .Values.memes.database.secrets }}
---
apiVersion: onepassword.com/v1
kind: OnePasswordItem
metadata:
  name: "{{ .name }}"
spec:
  itemPath: "{{ .path }}"

{{- end }}

{{- range .Values.memes.client.secrets }}
---
apiVersion: onepassword.com/v1
kind: OnePasswordItem
metadata:
  name: "{{ .name }}"
spec:
  itemPath: "{{ .path }}"

{{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.memes.prefix }}-database"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "{{ .Values.memes.prefix }}-database"
  template:
    metadata:
      annotations:
        operator.1password.io/inject: "{{ .Values.memes.prefix }}-database"
      labels:
        app: "{{ .Values.memes.prefix }}-database"
    spec:
      containers:
        - name: "{{ .Values.memes.prefix }}-database"
          image: postgres
          imagePullPolicy: Always
          ports:
            - containerPort: 5432
          env:
            {{- range .Values.memes.database.secrets }}
            - name: "{{ upper .name | replace "-" "_"}}"
              valueFrom:
                secretKeyRef:
                  name: "{{ .name }}"
                  key: "{{ .key }}"
            {{- end }}
          volumeMounts:
            - mountPath: /docker-entrypoint-initdb.d/
              name: schema-volume
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"

      volumes:
        - name: schema-volume
          configMap:
            name: "{{ .Values.memes.prefix }}-database-schema"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.memes.prefix }}-client"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "{{ .Values.memes.prefix }}-client"
  template:
    metadata:
      annotations:
        operator.1password.io/inject: "{{ .Values.memes.prefix }}-client"
      labels:
        app: "{{ .Values.memes.prefix }}-client"
    spec:
      containers:
        - name: "{{ .Values.memes.prefix }}-client"
          image: "{{ .Values.memes.client.image }}"
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: POSTGRES_HOST
              value: "{{ .Values.memes.prefix }}-database"
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_DATABASE
              value: postgres
            {{- range .Values.memes.client.secrets }}
            - name: "{{ upper .name | replace "-" "_"}}"
              valueFrom:
                secretKeyRef:
                  name: "{{ .name }}"
                  key: "{{ .key }}"
            {{- end }}
            {{- range .Values.memes.database.secrets }}
            - name: "{{ upper .name | replace "-" "_"}}"
              valueFrom:
                secretKeyRef:
                  name: "{{ .name }}"
                  key: "{{ .key }}"
            {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: "{{ .Values.memes.prefix }}-database"
  labels:
    app: "{{ .Values.memes.prefix }}-database"
spec:
  type: ClusterIP
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    app: "{{ .Values.memes.prefix }}-database"

---
apiVersion: v1
kind: Service
metadata:
  name: "{{ .Values.memes.prefix }}-client"
  labels:
    app: "{{ .Values.memes.prefix }}-client"
spec:
  # type: ClusterIP
  type: NodePort
  ports:
    - port: 8080
      targetPort: 8080
      nodePort: 30080
  selector:
    app: "{{ .Values.memes.prefix }}-client"